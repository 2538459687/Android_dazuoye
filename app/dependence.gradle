dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation rootProject.ext.dependencies["junit"]

    //如果aar包有很多，也可以一样象jar包统一添加一个文件夹下的所有包：
    def dir = new File('app/libs')
    dir.traverse(
            nameFilter: ~/.*\.aar/
    ) { file ->
        def name = file.getName().replace('.aar', '')
        implementation(name: name, ext: 'aar')
    }

    //------------module依赖----------------------------------
    implementation rootProject.ext.dependencies["module_support"]

    //==============================组件依赖 kotlin用kapt替换annotationProcessor===============================
    implementation rootProject.ext.dependencies["androidx_constraint_layout"]
    implementation rootProject.ext.dependencies["androidx_recyclerview"]
    implementation rootProject.ext.dependencies["androidx_material_design"]
    implementation rootProject.ext.dependencies["androidx_cardview"]
    implementation rootProject.ext.dependencies["androidx_gridLayout"]
    implementation rootProject.ext.dependencies["androidx_multidex"]
    implementation rootProject.ext.dependencies["coroutine_core"]
    implementation rootProject.ext.dependencies["coroutine_android"]

//    implementation rootProject.ext.dependencies["fragmentation"]
//    implementation rootProject.ext.dependencies["fragment_swipeback"]
//    implementation rootProject.ext.dependencies["eventbus_activity_scope"]
    implementation rootProject.ext.dependencies["eventbus"]

    implementation rootProject.ext.dependencies["andPermission"]
    implementation rootProject.ext.dependencies["immersionbar"]

    implementation rootProject.ext.dependencies["ahbottomnavigation"]

    implementation rootProject.ext.dependencies["pictureSelector"]
    implementation rootProject.ext.dependencies["photoview_smooth"]

    implementation rootProject.ext.dependencies["superTextView"]

    implementation rootProject.ext.dependencies["bugly_upgrade"]
    implementation rootProject.ext.dependencies["bugly_native"]

    implementation rootProject.ext.dependencies["brvah"]
    implementation rootProject.ext.dependencies["verticalTab"]
    implementation rootProject.ext.dependencies["flowlayout"]

    implementation rootProject.ext.dependencies["slid_back"]

    //是否启用头条屏幕适配
//    implementation rootProject.ext.dependencies["headline_autosize"]

//    implementation rootProject.ext.dependencies["ali_OSS"]

    implementation rootProject.ext.dependencies["license_dialog"]
    implementation rootProject.ext.dependencies["logger"]

    implementation rootProject.ext.dependencies["rxbinding2"]

//    implementation rootProject.ext.dependencies["amap_3dmap"]
//    implementation rootProject.ext.dependencies["amap_search"]
//    implementation rootProject.ext.dependencies["amap_location"]

    //glide
    implementation rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glide_compiler"]
    implementation rootProject.ext.dependencies["glide_transformations"]
    implementation rootProject.ext.dependencies["glide_okhttp_integration"]

    //okhttp,retrofit
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["okio"]
    implementation rootProject.ext.dependencies["okhttp_interceptor"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit_converter_scalars"]
    implementation rootProject.ext.dependencies["retrofit_converter_gson"]
    implementation rootProject.ext.dependencies["retrofit_rxjava2_adapter"]
    implementation rootProject.ext.dependencies["cookieJar"]

    //use leakcanary
//    debugImplementation rootProject.ext.dependencies["leakcanary"]
}
